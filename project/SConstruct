# JAVA
Java('', 'src/java',
     JAVAVERSION='1.6',
     JAVACLASSPATH=["libs","libs/inflib.jar"])

# mode debug, profile, or default
mode = ARGUMENTS.get('mode',None)

#variable
JAVA_HOME = '/usr/lib/jvm/java-7-openjdk-amd64'

#includes
includes = ['#/include',JAVA_HOME +'/include',JAVA_HOME + '/include/linux']
libpath  = [JAVA_HOME + '/jre/lib/amd64',JAVA_HOME + '/jre/lib/amd64/server/']


# libraries
# lib = ['sdd','m']
lib = ['jvm']

# compile
env = Environment(CC='g++',CCFLAGS=['-Wall','-finline-functions','-Wno-write-strings'],
                  CPPPATH=includes,
                  LIBS=lib,LIBPATH=libpath)
# support profiling (gprof)
env.Append(CCFLAGS=['-g','-pg'], LINKFLAGS=['-pg'])

# if mode == 'debug':
#     build_dir = 'debug'
#     env.Append(CCFLAGS='-g')
# elif mode == 'profile':
#     build_dir = 'debug'
#     env.Append(CCFLAGS='-pg')
# else:
#     build_dir = 'build'
#     env.Append(CCFLAGS='-O2')

# SConscript('src/SConscript',variant_dir=build_dir,exports='env')

SConscript('src/SConscript',variant_dir='#/bin',exports='env')
