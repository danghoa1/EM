#ifndef BSNWN_H
#define BSNWN_H

#include <iostream>

const int MAX_NUMBER_OF_PARENTS = 10;
const int MAX_NUMBER_OF_CPT_VALUES = 1024;

using namespace std;

class BN_Node
{
public:
	BN_Node();
	BN_Node(int cardinality);
	
	void InsertParent(BN_Node* parent);
	void NormalizeCPT();
	
//Inline
	double GetCPTValue(int position) 		{ return this->m_cpt[position]; };
	void SetCPTValue(int position, double value) 	{ this->m_cpt[position] = value; } ;
	int GetNumberOfParents()			{ return this->m_Nparents; };
	int GetCPTLength() 				{ return this->m_Ncpt; };
	int GetCardinality() 				{ return this->m_cardinality; };
	
private:
	BN_Node* m_parents[MAX_NUMBER_OF_PARENTS];
	int m_Nparents;
	int m_cardinality;
	
	double m_cpt[MAX_NUMBER_OF_CPT_VALUES];
	int m_Ncpt;
};

#endif
